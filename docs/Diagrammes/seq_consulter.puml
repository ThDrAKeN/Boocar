@startuml

actor Utilisateur as user
participant "Route" as route
participant "Navigation" as browser
participant "Screen Dashboard" as component << Dashboard >>
participant "Composant VehiculeCard" as component2 << VehiculeCard >>
participant "Controller" as controller

participant "Route" as routeBE
participant "Model" as modeleBE
participant "Database" as db

box "Front-End (React Native)" #LightBlue
participant browser
participant route
participant component
participant component2
participant controller
end box

box "Back-End (ExpressJS / NodeJS / MySQLDriver)" #LightGreen
participant routeBE
participant modeleBE
end box

box "Data Tier (MySQL)" #F29111
participant db
end box

user -> browser
activate browser
browser -> route : default
activate route
route -> component : call Screen



activate component

deactivate browser

component -> routeBE : componentDidMount() \n: HTTP get request
deactivate route
activate routeBE





routeBE -> modeleBE : redirection model \n car



activate modeleBE
modeleBE -> db : request mySQL ORM \n (resolutions json)

activate db
db -> db : traitement
db --> modeleBE : callback
deactivate db
deactivate routeBE
activate controller
modeleBE --> controller : reponse
deactivate modeleBE



alt HTTP RESPONSE : OK
	controller --> component : http reponse : OK + data
	component -> component2 : Call component : props
	activate component2
	component2 --> component : return x rendered Component
	deactivate component2

else !HTTP RESPONSE : ERROR
	controller --> component : http reponse : NOK
	component -> component : Display ERROR



end

deactivate controller






deactivate modeleBE






deactivate component
deactivate controller






' alt result

'     form -> controler : formSignIn(email,pwd)
'     controler -> controler : result = checkFields()

'     alt result
'     	controler -> secure : Secure.authenticate(email, pwd, true);
'     	secure -> security : onAuthenticated()
'     	security --> form : renderJSON(0);
'     	form --> user : display main page
'     else !result
'     	controler --> form : renderJSON(1)
'     	form --> user : display error
'     end

' else !result
' 	form --> user : display error
' end

@enduml